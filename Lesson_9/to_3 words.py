r"""
Напишите функцию, которая по заданной текстовой строке (возможно, с пунктуацией и разрывами строк) возвращает массив из трех самых часто встречающихся слов в порядке убывания количества вхождений.
		Слово представляет собой строку букв русского или латинского алфавита, необязательно содержащую один или несколько апострофов ( ').
		Апострофы могут стоять в начале, середине или конце слова ( допустимы все 'abc, abc', 'abc', )ab'c
		Любые другие символы (например #, \, , /, ....) не являются частью слова и должны рассматриваться как пробелы.
		Совпадения должны быть нечувствительны к регистру, а слова в результате должны быть в нижнем регистре.
		Если текст содержит менее трех уникальных слов, то должны быть возвращены либо первые 2, либо первое 1 слово, либо пустой массив, если текст не содержит слов
для решения желательно использовать пегулярные выражения
"""
import re
from collections import Counter

def top_3_words(text):
    words = re.findall(r"[а-я']*[а-я]+[а-я']*", text.lower()) # находит по маске, текст в нижний регистр
    top_3 = Counter(words).most_common(3) # находит одинаковые в списке и берет 3 самых повторяющихся
    return [sp[0] for sp in top_3]


s = "Аленький цветочек – красивая, волшебная  добрая детская история о безоговорочной преданности и любви, " \
       "которые побеждают неверие зло. Сказка Аленький цветочек создана С. Аксаковым для детского сборника в 1858 " \
       "году. Главная героиня, добросердечная девушка, попросила отцу привезти ей из дальнего странствования " \
       "аленький цветочек. Выполняя просьбу любимицы, отец срывает цветок зло в саду дивного зверя. Дабы избежать " \
       "наказания, дочь отцу приходится отправить дочь к чудищу, который впоследствии оказывается заколдованным " \
       "принцем. Читать сказку Аленький  особенно понравится девочкам - их завораживают рассказы о" \
       " любви. Историю рекомендуется читать перед сном, ведь она зло написана напевным  лиричным народным " \
       "языком, имеющим немного убаюкивающую дочь природу."


print(top_3_words(s))



